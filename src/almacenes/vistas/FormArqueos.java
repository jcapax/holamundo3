/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package almacenes.vistas;

import almacenes.conectorDB.DatabaseUtils;
import almacenes.model.Arqueo;
import almacenes.model.DetalleTransaccion;
import almacenes.model.ListaCaja;
import dao.ArqueoDAO;
import dao.ArqueoDAOImpl;
import dao.CajaDAO;
import dao.CajaDAOImpl;
import dao.DetalleTransaccionDAOImpl;
import dao.LugarDAO;
import dao.LugarDAOImpl;
import dao.reportes.ReporteVentasDAO;
import dao.reportes.ReporteVentasDAOImpl;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author jcarlos.porcel
 */
public class FormArqueos extends javax.swing.JFrame {

    private DatabaseUtils databaseUtils;
    private Connection connectionDB;
    private DefaultTableModel dtm;
    private LugarDAO lugarDAO;
    private CajaDAO cajaDAO;
    private ArqueoDAO arqueoDAO;
    private ReporteVentasDAO reporteVentasDAO;
    private DetalleTransaccionDAOImpl detalleTransaccionDAO;
    private byte idLugar;
    

    public FormArqueos() {
        initComponents();
    }
    
    public FormArqueos(Connection connectionDB) {
        initComponents();
        this.setLocationRelativeTo(null);

        this.databaseUtils = new DatabaseUtils();
        this.connectionDB = connectionDB;
        arqueoDAO = new ArqueoDAOImpl(connectionDB);
        lugarDAO = new LugarDAOImpl(connectionDB);
        cajaDAO = new CajaDAOImpl(connectionDB);
        reporteVentasDAO = new ReporteVentasDAOImpl(connectionDB, "");
        detalleTransaccionDAO = new DetalleTransaccionDAOImpl(connectionDB);
        idLugar = 0;
        
        headerTabla();
        iniciarComponentes();
    }
    
    public void headerTabla(){
        Font f = new Font("Times New Roman", Font.BOLD, 13);
        
        jtArqueos.getTableHeader().setFont(f);
        jtArqueos.getTableHeader().setBackground(Color.orange);
        
        jtCaja.getTableHeader().setFont(f);
        jtCaja.getTableHeader().setBackground(Color.orange);
        
        jtDetalleTransaccion.getTableHeader().setFont(f);
        jtDetalleTransaccion.getTableHeader().setBackground(Color.orange);
    }
    
    private void iniciarComponentes() {
        llenarComboLugar();
        llenarMeses();
        llenarAnnos();
        vaciarTotales();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcAnno = new javax.swing.JComboBox<>();
        jcMes = new javax.swing.JComboBox<>();
        jbBuscar = new javax.swing.JButton();
        jlTituloFormulario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtArqueos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jtxtTotalMes = new javax.swing.JTextField();
        jlTituloFormulario1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtCaja = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jtxtTotalCaja = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtDetalleTransaccion = new javax.swing.JTable();
        jtxtTotalTransaccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        jlTituloFormulario3 = new javax.swing.JLabel();
        bImprimir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jcLugar = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setText("Mes");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("AÃ±o");

        jcAnno.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcAnno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcMes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Search-icon.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jlTituloFormulario.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jlTituloFormulario.setForeground(new java.awt.Color(153, 0, 51));
        jlTituloFormulario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTituloFormulario.setText("Lista Arqueos Mensuales");

        jtArqueos.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtArqueos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Apertura", "Cierre", "Caja Inicial", "Caja Cierre", "Total", "Terminal", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtArqueos.setRowHeight(20);
        jtArqueos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtArqueosMouseClicked(evt);
            }
        });
        jtArqueos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtArqueosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtArqueos);
        if (jtArqueos.getColumnModel().getColumnCount() > 0) {
            jtArqueos.getColumnModel().getColumn(0).setMinWidth(0);
            jtArqueos.getColumnModel().getColumn(0).setPreferredWidth(0);
            jtArqueos.getColumnModel().getColumn(0).setMaxWidth(0);
            jtArqueos.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 51));
        jLabel5.setText("Total Mes");

        jtxtTotalMes.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtxtTotalMes.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jlTituloFormulario1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jlTituloFormulario1.setForeground(new java.awt.Color(153, 0, 51));
        jlTituloFormulario1.setText("Caja");

        jtCaja.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtCaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idTransaccion", "Nro.", "Fecha", "Movimiento", "Importe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCaja.setRowHeight(20);
        jtCaja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCajaMouseClicked(evt);
            }
        });
        jtCaja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtCajaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jtCaja);
        if (jtCaja.getColumnModel().getColumnCount() > 0) {
            jtCaja.getColumnModel().getColumn(0).setMinWidth(0);
            jtCaja.getColumnModel().getColumn(0).setPreferredWidth(0);
            jtCaja.getColumnModel().getColumn(0).setMaxWidth(0);
            jtCaja.getColumnModel().getColumn(1).setMinWidth(40);
            jtCaja.getColumnModel().getColumn(1).setPreferredWidth(40);
            jtCaja.getColumnModel().getColumn(1).setMaxWidth(40);
        }

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setText("Total Caja");

        jtxtTotalCaja.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtxtTotalCaja.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jtDetalleTransaccion.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtDetalleTransaccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Simbolo", "Cantidad", "Importe Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtDetalleTransaccion.setRowHeight(20);
        jScrollPane3.setViewportView(jtDetalleTransaccion);
        if (jtDetalleTransaccion.getColumnModel().getColumnCount() > 0) {
            jtDetalleTransaccion.getColumnModel().getColumn(0).setResizable(false);
            jtDetalleTransaccion.getColumnModel().getColumn(0).setPreferredWidth(230);
            jtDetalleTransaccion.getColumnModel().getColumn(3).setResizable(false);
            jtDetalleTransaccion.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        jtxtTotalTransaccion.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtxtTotalTransaccion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("Total Movimiento");

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/close_window.png"))); // NOI18N
        btnSalir.setText("Cerrar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jlTituloFormulario3.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jlTituloFormulario3.setForeground(new java.awt.Color(153, 0, 51));
        jlTituloFormulario3.setText("Movimiento Caja");

        bImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/print.png"))); // NOI18N
        bImprimir.setText("Imprimir");
        bImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bImprimirActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 51));
        jLabel3.setText("Lugar");

        jcLugar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcLugar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcLugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcLugarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTituloFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, 1303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jlTituloFormulario1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jcLugar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jcMes, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcAnno, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(327, 327, 327)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(146, 146, 146)
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jtxtTotalTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtxtTotalMes, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6)
                                    .addGap(13, 13, 13)
                                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jbBuscar)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(bImprimir)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jlTituloFormulario3)
                                            .addGap(1004, 1004, 1004)
                                            .addComponent(jtxtTotalCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(1, 1, 1))))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTituloFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bImprimir)
                    .addComponent(jbBuscar)
                    .addComponent(jcAnno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jcMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jcLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addComponent(jlTituloFormulario1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtxtTotalMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtTotalCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(8, 8, 8)
                        .addComponent(jlTituloFormulario3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtxtTotalTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4))
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        vaciarTotales();
        llenarTablaArqueos();
        llenarCaja(-1);
        llenarDetalleTransaccion(-1);        
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jtArqueosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtArqueosKeyReleased
        seleccionarArqueo();
    }//GEN-LAST:event_jtArqueosKeyReleased

    private void jtArqueosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtArqueosMouseClicked
        seleccionarArqueo();
    }//GEN-LAST:event_jtArqueosMouseClicked

    private void jtCajaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCajaKeyReleased
        seleccionarDetalletransaccion();
    }//GEN-LAST:event_jtCajaKeyReleased

    private void jtCajaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCajaMouseClicked
        seleccionarDetalletransaccion();
    }//GEN-LAST:event_jtCajaMouseClicked

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void bImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bImprimirActionPerformed
        Integer anno;
        byte mes;
        String nombre_mes = null;
        
        mes = (byte) (jcMes.getSelectedIndex() + 1);
        anno = Integer.parseInt(jcAnno.getSelectedItem().toString());
        
        nombre_mes = getNombreMes(mes);
        
        imprimir_arqueos_mes(anno, mes, nombre_mes);
    }//GEN-LAST:event_bImprimirActionPerformed

    private void jcLugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcLugarActionPerformed
        seleccionarElementoLugar();
    }//GEN-LAST:event_jcLugarActionPerformed

    private void seleccionarElementoLugar() {
        
        String sel = null;
        String comp = "Sel";
        HashMap<String, Integer> map = lugarDAO.lugarClaveValor();
        try {
            sel = jcLugar.getSelectedItem().toString();
            if(sel.equals(comp)){
                idLugar = 0;
            }
            else{
                idLugar = Byte.valueOf(map.get(sel).toString());
            }
        } catch (Exception e) {
        }        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormArqueos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormArqueos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormArqueos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormArqueos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormArqueos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bImprimir;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JComboBox<String> jcAnno;
    private javax.swing.JComboBox<String> jcLugar;
    private javax.swing.JComboBox<String> jcMes;
    private javax.swing.JLabel jlTituloFormulario;
    private javax.swing.JLabel jlTituloFormulario1;
    private javax.swing.JLabel jlTituloFormulario3;
    private javax.swing.JTable jtArqueos;
    private javax.swing.JTable jtCaja;
    private javax.swing.JTable jtDetalleTransaccion;
    private javax.swing.JTextField jtxtTotalCaja;
    private javax.swing.JTextField jtxtTotalMes;
    private javax.swing.JTextField jtxtTotalTransaccion;
    // End of variables declaration//GEN-END:variables

    private void llenarMeses() {
        jcMes.removeAllItems();

        List<String> lmeses = new ArrayList<>();

        lmeses.add("ENERO");
        lmeses.add("FEBRERO");
        lmeses.add("MARZO");
        lmeses.add("ABRIL");
        lmeses.add("MAYO");
        lmeses.add("JUNIO");
        lmeses.add("JULIO");
        lmeses.add("AGOSTO");
        lmeses.add("SEPTIEMBRE");
        lmeses.add("OCTUBRE");
        lmeses.add("NOVIEMBRE");
        lmeses.add("DICIEMBRE");

        for (byte i = 0; i < lmeses.size(); i++) {
            jcMes.addItem(lmeses.get(i).toString());
        }
    }
    
    public void seleccionarDetalletransaccion(){
        int fila = jtCaja.getSelectedRow();
        int idtransaccion = (int) jtCaja.getValueAt(fila, 0);
        
        llenarDetalleTransaccion(idtransaccion);
    }
    
    public void seleccionarArqueo(){
        int fila = jtArqueos.getSelectedRow();
        int idArqueo = (int) jtArqueos.getValueAt(fila, 0);
        
        llenarCaja(idArqueo);
        llenarDetalleTransaccion(0);
    }

    private void llenarAnnos() {
        jcAnno.removeAllItems();

        List<Integer> lanno = new ArrayList<>();
        lanno = arqueoDAO.getListaAnnosArqueos();
        for (byte i = 0; i < lanno.size(); i++) {
            jcAnno.addItem(lanno.get(i).toString());
        }
    }
    
    public void llenarCaja(int idArqueo){
        double importeTotal = 0;
        
        DecimalFormat df = new DecimalFormat("###,##0.00");

        List<ListaCaja> r = new ArrayList<>();

        r = cajaDAO.getListaCaja(idArqueo);

        dtm = (DefaultTableModel) this.jtCaja.getModel();
        dtm.setRowCount(0);

        jtCaja.setModel(dtm);

        Object[] fila = new Object[5];

        for (int i = 0; i < r.size(); i++) {
            fila[0] = r.get(i).getIdTransaccion();
            fila[1] = i;
            fila[2] = r.get(i).getFecha();
            fila[3] = r.get(i).getMovimiento();
            fila[4] = df.format(r.get(i).getImporteCaja());
            importeTotal = importeTotal + r.get(i).getImporteCaja();
            
            dtm.addRow(fila);
        }
        
        jtxtTotalCaja.setText(df.format(importeTotal).toString());

        TableColumnModel columnModel = jtCaja.getColumnModel();
        
        TableColumn colImpCaja = columnModel.getColumn(4);
        
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(jLabel1.RIGHT);
        
        colImpCaja.setCellRenderer(renderer);
        
        jtCaja.setModel(dtm);
    }
    
    public void llenarDetalleTransaccion(int idTransaccion){
        double importeTotal = 0;

        DecimalFormat df = new DecimalFormat("###,##0.00");

        List<DetalleTransaccion> r = new ArrayList<>();

        r = detalleTransaccionDAO.getDetalleTransaccion(idTransaccion);

        dtm = (DefaultTableModel) this.jtDetalleTransaccion.getModel();
        dtm.setRowCount(0);

        jtDetalleTransaccion.setModel(dtm);

        Object[] fila = new Object[4];

        for (int i = 0; i < r.size(); i++) {
            fila[0] = r.get(i).getNombreProducto();
            fila[1] = r.get(i).getSimbolo();
            fila[2] = r.get(i).getCantidad();
            fila[3] = df.format(r.get(i).getValorTotal());
            importeTotal = importeTotal + r.get(i).getValorTotal();
            
            dtm.addRow(fila);
        }
        
        jtxtTotalTransaccion.setText(df.format(importeTotal).toString());

        TableColumnModel columnModel = jtDetalleTransaccion.getColumnModel();
        
        TableColumn colImpTotal = columnModel.getColumn(3);
        
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(jLabel1.RIGHT);
        
        colImpTotal.setCellRenderer(renderer);
        
        jtDetalleTransaccion.setModel(dtm);
    }
    
    public void llenarTablaArqueos() {
        double importeTotal = 0;

        DecimalFormat df = new DecimalFormat("###,##0.00");

        List<Arqueo> r = new ArrayList<>();

        byte mes = 0;
        int anno = 0;
        
        mes = (byte) (jcMes.getSelectedIndex() + 1);
        anno = Integer.parseInt(jcAnno.getSelectedItem().toString());
        
        r = arqueoDAO.getListaArqueos(idLugar, mes, anno);

        dtm = (DefaultTableModel) this.jtArqueos.getModel();
        dtm.setRowCount(0);

        jtArqueos.setModel(dtm);

        Object[] fila = new Object[8];        

        for (int i = 0; i < r.size(); i++) {
            fila[0] = r.get(i).getId();
            fila[1] = r.get(i).getFechaApertura();
            fila[2] = r.get(i).getFechaCierre();
            fila[3] = df.format(r.get(i).getCajaInicial());
            fila[4] = df.format(r.get(i).getImporteCierre());
            fila[5] = df.format(r.get(i).getImporteCierre() - r.get(i).getCajaInicial());
            importeTotal = importeTotal + (r.get(i).getImporteCierre() - r.get(i).getCajaInicial());
            fila[6] = r.get(i).getIdTerminal();
            fila[7] = r.get(i).getUsuario();           

            dtm.addRow(fila);
        }
        
        jtxtTotalMes.setText(df.format(importeTotal).toString());

        TableColumnModel columnModel = jtArqueos.getColumnModel();
        
        TableColumn colImpApertura = columnModel.getColumn(3);
        TableColumn colImpCierre = columnModel.getColumn(4);
        TableColumn colImpTotal = columnModel.getColumn(5);
        
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(jLabel1.RIGHT);
        
        colImpApertura.setCellRenderer(renderer);
        colImpCierre.setCellRenderer(renderer);
        colImpTotal.setCellRenderer(renderer);
        
        jtArqueos.setModel(dtm);
    }
    
    public void vaciarTotales(){
        jtxtTotalMes.setText("");
    }

    private void imprimir_arqueos_mes(Integer anno, byte mes, String nombre_mes) {
        reporteVentasDAO.listaArqueosMes(anno, mes, nombre_mes, idLugar);
    }

    public void llenarComboLugar(){
        
        String sel = "Sel";
        
        jcLugar.removeAllItems();
        jcLugar.addItem(sel);
        
        HashMap<String, Integer> map = lugarDAO.lugarClaveValor();

        for (String s : map.keySet()) {
            jcLugar.addItem(s.toString());
        }        
    }
    
    private String getNombreMes(byte mes) {
        String nombreMes = "";
        switch(mes){
            case 1: nombreMes = "ENERO"; break;
            case 2: nombreMes = "FEBRERO"; break;
            case 3: nombreMes = "MARZO"; break;
            case 4: nombreMes = "ABRIL"; break;
            case 5: nombreMes = "MAYO"; break;
            case 6: nombreMes = "JUNIO"; break;
            case 7: nombreMes = "JULIO"; break;
            case 8: nombreMes = "AGOSTO"; break;
            case 9: nombreMes = "SEPTIEMBRE"; break;
            case 10: nombreMes = "OCTUBRE"; break;
            case 11: nombreMes = "NOVIEMBRE"; break;
            case 12: nombreMes = "DICIEMBRE"; break;
        }
        return nombreMes;
    }

}
